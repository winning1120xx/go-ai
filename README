Go AI is a port of the GNU Go engine to the web through emscripten.

To build Go AI, first compile natively (configure, make). Then compile
again (in a new directory) with a recent version of emscripten (emconfigure,
emmake). This will fail in the patterns subdirectory. To fix this, remove
all .db and .c targets from patterns/Makefile (lines 640 to 725) and copy
them into the directory from the native build. Run emmake again and the 
build should succeed.

Interacting with Go AI from the browser:

Set command line arguments by adding them to the arguments javascript
variable before the script is loaded.
(Ex. arguments[0] = "--mode=gtp"; arguments[1] = "--level=10";)

Send commands and receive responses through the Module object. These will
be processed asynchronously at the browsers rendering rate.
(Ex. Module.commands = ["genmove black", "printfullsgf"];
     Module.responses;
       [ "= Q16
       ", "= (;GM[1]FF[4]
       SZ[19]
       GN[GNU Go 3.9.1 Random Seed 1420673223 level 10]
       DT[2015-01-07]
       KM[0.0]HA[0]RU[Japanese]AP[GNU Go:3.9.1]
       ;B[pd])
       " ]
)

Load sgf files through the Module object.
(Ex. Module.loadsgf = "(;B[pd])"; Module.commands = ["loadsgf -"];
     Module.responses;
       [ "= white
       " ]
)

Go AI makes the following additional changes from GNU Go:

A new gtp command, printfullsgf, which produces a more complete sgf file.
